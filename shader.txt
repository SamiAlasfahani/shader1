vec3 palette(float t){

    vec3 a = vec3(0.5, 0.5, 0.5);
    vec3 b = vec3(0.5, 0.5, 0.5);
    vec3 c = vec3(1.0, 1.0, 1.0);
    vec3 d = vec3(0.263, 0.416, 0.557);

    return a+b*cos(6.28318*(c*t*d));
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    vec2 uv = 2.0*(fragCoord/iResolution.xy - 0.5);
    vec2 uv0 = uv;
    
    vec3 finalColour = vec3(0.0, 0.0, 0.0);
    
    uv.x *= iResolution.x/iResolution.y;
    
    for(float i = 0.0; i < 4.0; i++){
        uv = fract(1.66*uv)-0.5;

        float d = length(uv) * exp(-length(uv0));

        vec3 col = palette(length(uv0) + i*0.4 + length(iMouse)*0.4);

        d = abs(sin(length(uv)*8.0 + iTime)/8.0);
        d = smoothstep(0.0, 0.1, d);
        d = 0.2/d;

        col *= d;

        finalColour += col*d;
    }
    
    fragColor = vec4(finalColour, 1.0);
}